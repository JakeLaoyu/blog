<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jake</title>
  
  <subtitle>闲看四季，静候花开。</subtitle>
  <link href="https://i.jakeyu.top/atom.xml" rel="self"/>
  
  <link href="https://i.jakeyu.top/"/>
  <updated>2023-02-15T04:39:57.723Z</updated>
  <id>https://i.jakeyu.top/</id>
  
  <author>
    <name>Jake</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 github action 自动部署博客和同步备份</title>
    <link href="https://i.jakeyu.top/2023/02/04/%E4%BD%BF%E7%94%A8-github-action-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E5%92%8C%E5%90%8C%E6%AD%A5%E5%A4%87%E4%BB%BD/"/>
    <id>https://i.jakeyu.top/2023/02/04/%E4%BD%BF%E7%94%A8-github-action-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E5%92%8C%E5%90%8C%E6%AD%A5%E5%A4%87%E4%BB%BD/</id>
    <published>2023-02-04T00:14:33.000Z</published>
    <updated>2023-02-15T04:39:57.723Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="//blogimg.jakeyu.top/%E4%BD%BF%E7%94%A8-github-action-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E5%92%8C%E5%90%8C%E6%AD%A5%E5%A4%87%E4%BB%BD/44036562.png"></p><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用 github action 自动化可以让我们发布博客更加简单，只需要把代码提交到 github 仓库即可。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>关于如何使用 git 上传博客到自己的服务器可以查看我之前写的<a href="/2016/12/06/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/">Hexo博客部署到服务器</a>。</p><h2 id="部署到-github-page"><a href="#部署到-github-page" class="headerlink" title="部署到 github page"></a>部署到 github page</h2><h3 id="action-配置"><a href="#action-配置" class="headerlink" title="action 配置"></a>action 配置</h3><p>在项目根目录下创建 <code>.github/workflows</code> 文件夹，然后在该文件夹下创建 <code>deploy-gh-page.yml</code> 文件，内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">gh-page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据实际情况调整分支</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy-gh-page:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">ref:</span> <span class="string">master</span></span><br><span class="line">          <span class="attr">fetch-depth:</span> <span class="number">0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">pnpm/action-setup@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">version:</span> <span class="number">7</span></span><br><span class="line">          <span class="attr">run_install:</span> <span class="literal">false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;16&quot;</span></span><br><span class="line">          <span class="attr">cache:</span> <span class="string">&quot;pnpm&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">pnpm</span> <span class="string">install</span> <span class="string">--frozen-lockfile</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">gh-page</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="comment"># github 自带变量，无需配置</span></span><br><span class="line">          <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br></pre></td></tr></table></figure><h2 id="部署到服务器"><a href="#部署到服务器" class="headerlink" title="部署到服务器"></a>部署到服务器</h2><h3 id="SSH-key"><a href="#SSH-key" class="headerlink" title="SSH key"></a>SSH key</h3><p>添加 SSH Private Key 到 <code>github repo -&gt; settings -&gt; Secrets and variables -&gt; Actions</code>。</p><p><img data-src="//blogimg.jakeyu.top/%E4%BD%BF%E7%94%A8-github-action-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E5%92%8C%E5%90%8C%E6%AD%A5%E5%A4%87%E4%BB%BD/SCR-20230204-mh.png"></p><h3 id="action-配置-1"><a href="#action-配置-1" class="headerlink" title="action 配置"></a>action 配置</h3><p>在<a href="#action-%E9%85%8D%E7%BD%AE">上文的配置</a>基础上，增加如下配置:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy-to-server:</span></span><br><span class="line">  <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">  <span class="comment"># 依赖 deploy-gh-page job</span></span><br><span class="line">  <span class="attr">needs:</span> [<span class="string">deploy-gh-page</span>]</span><br><span class="line">  <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">wei/git-sync@v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">source_repo:</span> <span class="string">JakeLaoyu/blog</span></span><br><span class="line">        <span class="attr">source_branch:</span> <span class="string">refs/remotes/source/gh-pages</span></span><br><span class="line">        <span class="attr">destination_repo:</span> <span class="string">root@110.40.198.64:/www/wwwroot/blog.git</span></span><br><span class="line">        <span class="attr">destination_branch:</span> <span class="string">refs/heads/master</span></span><br><span class="line">        <span class="attr">destination_ssh_private_key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SERVER_PRIVATE_KEY</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img data-src="//blogimg.jakeyu.top/%E4%BD%BF%E7%94%A8-github-action-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E5%92%8C%E5%90%8C%E6%AD%A5%E5%A4%87%E4%BB%BD/SCR-20230204-s2.png"></p><h2 id="同步至-gitee-等"><a href="#同步至-gitee-等" class="headerlink" title="同步至 gitee 等"></a>同步至 gitee 等</h2><p>依赖 <a href="https://github.com/wearerequired/git-mirror-action">wearerequired&#x2F;git-mirror-action</a> 我们可以很方便实现。</p><p>在项目根目录下创建 <code>.github/workflows</code> 文件夹，然后在该文件夹下创建 <code>sync-to-gitee.yml</code> 文件，内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Sync</span> <span class="string">to</span> <span class="string">Gitee</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> [<span class="string">master</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">sync:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Sync</span> <span class="string">to</span> <span class="string">Gitee</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">wearerequired/git-mirror-action@master</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="comment"># 需要事先在 gitee 上创建 ssh key 并添加到仓库</span></span><br><span class="line">          <span class="attr">SSH_PRIVATE_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITEE_RSA_PRIVATE_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="comment"># GitHub 源仓库地址</span></span><br><span class="line">          <span class="attr">source-repo:</span> <span class="string">git@github.com:JakeLaoyu/blog.git</span></span><br><span class="line">          <span class="comment"># Gitee 目标仓库地址</span></span><br><span class="line">          <span class="attr">destination-repo:</span> <span class="string">git@gitee.com:jakelaoyu/HexoBlogBackup.git</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;//blogimg.jakeyu.top/%E4%BD%BF%E7%94%A8-github-action-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2%E5%92%8C%E5%90%8C%E6%AD%A5%E5%A4%87%E4%BB%BD/44036562.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="https://i.jakeyu.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="服务器" scheme="https://i.jakeyu.top/categories/%E5%89%8D%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="CI/CD" scheme="https://i.jakeyu.top/categories/%E5%89%8D%E7%AB%AF/%E6%9C%8D%E5%8A%A1%E5%99%A8/CI-CD/"/>
    
    
    <category term="服务器" scheme="https://i.jakeyu.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="前端" scheme="https://i.jakeyu.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CI/CD" scheme="https://i.jakeyu.top/tags/CI-CD/"/>
    
  </entry>
  
  <entry>
    <title>注册ChatGPT详细指南</title>
    <link href="https://i.jakeyu.top/2022/12/09/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/"/>
    <id>https://i.jakeyu.top/2022/12/09/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/</id>
    <published>2022-12-09T13:46:15.000Z</published>
    <updated>2023-02-15T04:39:57.723Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/cbsn-fusion-promise-fear-of-artificial-intelligence-bot-chatgpt-thumbnail-1528537-640x360.jpeg"></p><span id="more"></span><p>最近ChatGPT真受欢迎，但是有些人注册时会经常面临不服务它们的地区问题，现在我们给你详细问题解决。</p><p>作者 <a href="https://twitter.com/BoxMrChen">twitter</a></p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ol><li>代理。要求是韩国，日本，印度，新加坡，美国这些国家的地址都合适。对其他的我们还不太清楚，反正香港或中国的代理肯定不行。<a href="https://join.v2club.cc/#/register?code=C5EnE7vC">推荐机场</a></li><li>找一个国外手机号码，如果你没有用过接码平台也行，有些接码平台是无法接的，所以我们推荐一个就是 <a href="https://sms-activate.org/?ref=2862835">sms-activate.org</a></li><li>准备一个浏览器</li></ol><h1 id="开始一步一步注册"><a href="#开始一步一步注册" class="headerlink" title="开始一步一步注册"></a>开始一步一步注册</h1><h2 id="第一步是接验证码"><a href="#第一步是接验证码" class="headerlink" title="第一步是接验证码"></a>第一步是接验证码</h2><p>打开接码平台 <a href="https://sms-activate.org/?ref=2862835">sms-activate.org</a>，注册一个账号</p><p><img data-src="//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/pasted%20image%200.png"></p><p>然后要充值余额</p><p><img data-src="//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/image.png"></p><p>一次接码OpenAi的验证码费用是大概11卢布，人民币来看差不多是1块钱，不过只能充美金，就先充直个1美金钱。可以选择对你任何方便方式。支付宝也有</p><p><img data-src="//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/image%20(1).png"></p><p>充值完成可能需要等一会，就先放着，直接进行下一步。</p><h2 id="第二部是注册一个OpenAI账号"><a href="#第二部是注册一个OpenAI账号" class="headerlink" title="第二部是注册一个OpenAI账号"></a>第二部是注册一个OpenAI账号</h2><p>首先打开<a href="https://beta.openai.com/signup">ChatGPT的账户注册页面</a>。谷歌注册或者邮箱注册都可以，无所谓，我们这里用邮箱注册作为例子。</p><p><img data-src="//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/Untitled.png"></p><p>用邮箱注册后你要验证邮件。进去邮箱，查看email里的链接。</p><p><img data-src="//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/image-2.png"></p><p>这里你需要输入需要的信息。</p><p>当然，有一些人会在这里遇到一个问题，会出现说不能在当前国家服务的提示。</p><p><img data-src="//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/image-3.png"></p><p>不用怕，这个这文章就帮助你解决这个问题。</p><p>这方面那，给你一招。一般你出现这种问题，就是因为你的代理没有全局，或者位置不对。香港或中国的的代理是100%无法通过的。</p><p>这个问题是非常神奇的，只要你出现了这个提示，那么你接下来怎么切换代理，都是没用的。现在提供给你你一招解决。</p><h2 id="解决地区问题"><a href="#解决地区问题" class="headerlink" title="解决地区问题"></a>解决地区问题</h2><p>先，你要把你的代理切换到任何合适的地区，我们这里选择了韩国。</p><p>然后，先复制下面这段代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">localStorage</span>.<span class="title function_">removeItem</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="variable language_">window</span>.<span class="property">localStorage</span>).<span class="title function_">find</span>(<span class="function"><span class="params">i</span>=&gt;</span>i.<span class="title function_">startsWith</span>(<span class="string">&#x27;@@auth0spajs&#x27;</span>)))</span><br></pre></td></tr></table></figure><p>接着在地址栏里输入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">javascript</span>:</span><br></pre></td></tr></table></figure><p>请注意，这里一定要输入，因为你复制的话是粘贴不了的。</p><p>然后再粘贴我们第一段复制的内容：</p><p><img data-src="//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/Untitled-1.png"></p><p>然后按下回车键，刷新页面。如果你的代理没问题，就可以看到正常工作的注册页面了。</p><h2 id="输入手机号码"><a href="#输入手机号码" class="headerlink" title="输入手机号码"></a>输入手机号码</h2><p><img data-src="//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/Untitled-2.png"></p><p>这里选的是韩国，这是因为我们使用韩国的代理，但是我们最好选择印度。然后到我们的接码网站上去。在左侧搜索OpenAi，然后点击印度。</p><p><img data-src="//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/sdfdskfjdls.png"></p><p>点击”小黄车”。</p><p><img data-src="//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/pasted%20image%200-2.png"></p><p>然后我们复制这个号码，粘贴过去。然后我们点击发送验证码就完成了。</p><p>等一会网站会提示验证码，我们复制粘贴。</p><p><img data-src="//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/image-4.png"></p><p>这里你要选择你打算如何使用OpenAI。随便选择吧。</p><h2 id="使用ChatGPT"><a href="#使用ChatGPT" class="headerlink" title="使用ChatGPT"></a>使用ChatGPT</h2><p>注册完后，打开<a href="https://chat.openai.com/auth/login">ChatGPT网站</a>去登陆。</p><p><img data-src="//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/Untitled-5.png"></p><p>在下面这个地方就可以开始写你的任何巧妙的句子了。取乐吧！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;//blogimg.jakeyu.top/%E6%B3%A8%E5%86%8CChatGPT%E8%AF%A6%E7%BB%86%E6%8C%87%E5%8D%97/cbsn-fusion-promise-fear-of-artificial-intelligence-bot-chatgpt-thumbnail-1528537-640x360.jpeg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="https://i.jakeyu.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="https://i.jakeyu.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>vscode 插件之代码补全提示</title>
    <link href="https://i.jakeyu.top/2021/12/04/vscode-%E6%8F%92%E4%BB%B6%E4%B9%8B%E4%BB%A3%E7%A0%81%E8%A1%A5%E5%85%A8%E6%8F%90%E7%A4%BA/"/>
    <id>https://i.jakeyu.top/2021/12/04/vscode-%E6%8F%92%E4%BB%B6%E4%B9%8B%E4%BB%A3%E7%A0%81%E8%A1%A5%E5%85%A8%E6%8F%90%E7%A4%BA/</id>
    <published>2021-12-04T16:23:58.000Z</published>
    <updated>2023-02-15T04:39:57.723Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="//blogimg.jakeyu.top/vscode-%E6%8F%92%E4%BB%B6%E4%B9%8B%E4%BB%A3%E7%A0%81%E8%A1%A5%E5%85%A8%E6%8F%90%E7%A4%BA/v2-30670b252d59bcc15c040f783d79f5e9_720w.png"></p><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>vscode 插件提供了很强大个能力，借助插件可以帮助我们提升开发效率。</p><p>在写 node 项目时经常需要相对路径寻找引用 Service 文件等，写一个插件帮我们自动补全。</p><p>借助 <a href="https://code.visualstudio.com/api/references/vscode-api"><code>vscode.languages.registerCompletionItemProvider</code></a> 方法，我们可以注册相关补全提示。</p><h1 id="注册服务"><a href="#注册服务" class="headerlink" title="注册服务"></a>注册服务</h1><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">activate</span>(<span class="params">context: vscode.ExtensionContext</span>) &#123;</span><br><span class="line">  context.<span class="property">subscriptions</span>.<span class="title function_">push</span>(</span><br><span class="line">    vscode.<span class="property">languages</span>.<span class="title function_">registerCompletionItemProvider</span>(<span class="string">&quot;typescript&quot;</span>, &#123;</span><br><span class="line">      provideCompletionItems,</span><br><span class="line">    &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="provideCompletionItems"><a href="#provideCompletionItems" class="headerlink" title="provideCompletionItems"></a>provideCompletionItems</h1><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">provideCompletionItems</span> = <span class="keyword">async</span> (<span class="params"></span></span><br><span class="line"><span class="params">  <span class="variable language_">document</span>: vscode.TextDocument,</span></span><br><span class="line"><span class="params">  position: vscode.Position</span></span><br><span class="line"><span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> serviceFiles = <span class="keyword">await</span> vscode.<span class="property">workspace</span>.<span class="title function_">findFiles</span>(<span class="string">&quot;app/services/**/*.ts&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!serviceFiles.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> serviceFiles.<span class="title function_">map</span>(<span class="function">(<span class="params">file</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 生成相对当前编辑文件的相对路径</span></span><br><span class="line">    <span class="keyword">const</span> relativePath = path.<span class="title function_">relative</span>(</span><br><span class="line">      path.<span class="title function_">dirname</span>(<span class="variable language_">document</span>.<span class="property">uri</span>.<span class="property">path</span>),</span><br><span class="line">      path.<span class="title function_">dirname</span>(file.<span class="property">path</span>)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> basename = path.<span class="title function_">basename</span>(file.<span class="property">path</span>);</span><br><span class="line">    <span class="keyword">const</span> extname = path.<span class="title function_">extname</span>(file.<span class="property">path</span>);</span><br><span class="line">    <span class="keyword">const</span> filename = basename.<span class="title function_">replace</span>(extname, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> insertText = <span class="string">`import <span class="subst">$&#123;filename&#125;</span> from &#x27;<span class="subst">$&#123;relativePath&#125;</span>/<span class="subst">$&#123;filename&#125;</span>&#x27;;\n<span class="subst">$&#123;filename&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> completionItem = <span class="keyword">new</span> vscode.<span class="title class_">CompletionItem</span>(</span><br><span class="line">      filename,</span><br><span class="line">      vscode.<span class="property">CompletionItemKind</span>.<span class="property">Class</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    completionItem.<span class="property">detail</span> = basename;</span><br><span class="line">    completionItem.<span class="property">insertText</span> = insertText;</span><br><span class="line">    completionItem.<span class="property">documentation</span> = <span class="string">`<span class="subst">$&#123;insertText&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> completionItem;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>同时我们需要在 package.json 中添加相应配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;activationEvents&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;onLanguage:typescript&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://code.visualstudio.com/api/references/vscode-api">VS Code API</a></li><li><a href="https://github.com/Liiked/VS-Code-Extension-Doc-ZH">VS-Code-Extension-Doc-ZH</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;//blogimg.jakeyu.top/vscode-%E6%8F%92%E4%BB%B6%E4%B9%8B%E4%BB%A3%E7%A0%81%E8%A1%A5%E5%85%A8%E6%8F%90%E7%A4%BA/v2-30670b252d59bcc15c040f783d79f5e9_720w.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="vscode" scheme="https://i.jakeyu.top/categories/vscode/"/>
    
    
    <category term="前端" scheme="https://i.jakeyu.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="vscode" scheme="https://i.jakeyu.top/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>centos 使用 Clash 梯子</title>
    <link href="https://i.jakeyu.top/2021/11/27/centos-%E4%BD%BF%E7%94%A8-Clash-%E6%A2%AF%E5%AD%90/"/>
    <id>https://i.jakeyu.top/2021/11/27/centos-%E4%BD%BF%E7%94%A8-Clash-%E6%A2%AF%E5%AD%90/</id>
    <published>2021-11-27T21:56:23.000Z</published>
    <updated>2023-02-15T04:39:57.723Z</updated>
    
    <content type="html"><![CDATA[<p>服务器访问 npm、github 等真让人捉急，折腾一下配个 clash。</p><p><img data-src="//blogimg.jakeyu.top/centos-%E4%BD%BF%E7%94%A8-Clash-%E6%A2%AF%E5%AD%90/logo.png"></p><span id="more"></span><h2 id="下载-clash"><a href="#下载-clash" class="headerlink" title="下载 clash"></a>下载 clash</h2><p>去 <a href="https://github.com/Dreamacro/clash/releases">github</a> 下载最新 linux 版本，一般使用 <code>linux-amd64</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gunzip clash-linux-amd64-v1.8.0.gz</span><br><span class="line">mv clash-linux-amd64-v1.8.0 ~/clash</span><br><span class="line">chmod +x ~/clash</span><br><span class="line">./clash</span><br></pre></td></tr></table></figure><p>一套执行完后会生成默认配置文件 <code>~/.config/clash</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">l ~/.config/clash</span><br><span class="line">-rw-r--r-- 1 root root 190K 11月 24 16:38 config.yaml</span><br><span class="line">-rw-r--r-- 1 root root 5.7M 11月 24 16:02 Country.mmdb</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>我是用的是 <a href="https://join.v2fly.club/#/register?code=C5EnE7vC">V2Club</a>。</p><h3 id="复制订阅地址"><a href="#复制订阅地址" class="headerlink" title="复制订阅地址"></a>复制订阅地址</h3><p><img data-src="http://blogimg.jakeyu.top/centos-%E4%BD%BF%E7%94%A8-Clash-%E6%A2%AF%E5%AD%90/iShot2021-11-27%2023.29.16.png"></p><p>这个配置我们不能直接使用，需要使用 <a href="https://acl4ssr-sub.github.io/">https://acl4ssr-sub.github.io/</a> 服务生成订阅地址，然后打开订阅地址就可以看到明文配置。</p><p>使用这份配置覆盖 <code>~/.config/clash/config.yaml</code>。</p><h3 id="启动代理"><a href="#启动代理" class="headerlink" title="启动代理"></a>启动代理</h3><p>然后启动 clash</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./clash</span><br></pre></td></tr></table></figure><p>设置终端使用 clash 代理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export ALL_PROXY=socks5://127.0.0.1:7891</span><br></pre></td></tr></table></figure><p>可以使用 <code>curl</code> 测试是否连接成功。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://www.google.com</span><br></pre></td></tr></table></figure><h2 id="远程管理"><a href="#远程管理" class="headerlink" title="远程管理"></a>远程管理</h2><p>修改配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.config/clash/config.yaml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">external-controller:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:9090</span></span><br><span class="line"><span class="comment"># 一定要配置 secret，用来远程访问安全</span></span><br><span class="line"><span class="attr">secret:</span> <span class="string">xxxx</span></span><br></pre></td></tr></table></figure><p>重启 clash 服务。</p><p>打开官方 <a href="http://clash.razord.top/">http://clash.razord.top/</a>，在设置中填写相应的端口，secret 配置。配置完成就即可远程管理</p><p><img data-src="http://blogimg.jakeyu.top/centos-%E4%BD%BF%E7%94%A8-Clash-%E6%A2%AF%E5%AD%90/iShot2021-11-27%2023.50.06.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;服务器访问 npm、github 等真让人捉急，折腾一下配个 clash。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;//blogimg.jakeyu.top/centos-%E4%BD%BF%E7%94%A8-Clash-%E6%A2%AF%E5%AD%90/logo.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="服务器" scheme="https://i.jakeyu.top/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="服务器" scheme="https://i.jakeyu.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>跨域名存取localStorage</title>
    <link href="https://i.jakeyu.top/2020/09/20/%E8%B7%A8%E5%9F%9F%E5%90%8D%E5%AD%98%E5%8F%96localStorage/"/>
    <id>https://i.jakeyu.top/2020/09/20/%E8%B7%A8%E5%9F%9F%E5%90%8D%E5%AD%98%E5%8F%96localStorage/</id>
    <published>2020-09-20T19:15:11.000Z</published>
    <updated>2023-02-15T04:39:57.723Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="//blogimg.jakeyu.top/%E8%B7%A8%E5%9F%9F%E5%90%8D%E8%AF%BB%E5%8F%96localStorage/de1cd54ffb.png"></p><span id="more"></span><blockquote><p>无论数据存储在 localStorage 还是 sessionStorage ，<strong>它们都特定于页面的协议。</strong></p></blockquote><p>由于<code>localStorage</code>是基于当前访问源(origin)的本地存储空间，所以当我们在 <code>a.jakeyu.top</code> 中存储一段数据，并想要在 <code>b.jakeyu.top</code> 中读取数据的时候是无法取到的。</p><p>最近遇到这样的需求，考虑过 cookie 方案，但是可能存储大量的数据，cookie 不可行。最终我们使用<code>iframe</code>来实现，我觉得这是一个很有趣的方法。</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p><code>a.jakeyu.top</code> 和 <code>b.jakeyu.top</code> 通过 <code>iframe</code> 加载同一个域名的页面，并使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage">postMessage</a> 和 <code>iframe</code> 中的页面进行通信，这样就可以实现跨域名存取 localStorage。</p><p>缺点是 <code>postMessage</code>  是基于回调的，所以所有 api 都是异步的。不过我们有 <code>promise</code>，可以让使用方式优雅一些。</p><p><img data-src="//blogimg.jakeyu.top/%E8%B7%A8%E5%9F%9F%E5%90%8D%E8%AF%BB%E5%8F%96localStorage/%E5%9B%BE%E5%83%8F2020-10-5.jpeg"></p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="父级页面"><a href="#父级页面" class="headerlink" title="父级页面"></a>父级页面</h2><h3 id="创建-iframe"><a href="#创建-iframe" class="headerlink" title="创建 iframe"></a>创建 iframe</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">createIframe</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> iframeInBody = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#iframe&#x27;</span>) <span class="keyword">as</span> <span class="title class_">HTMLIFrameElement</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (iframeInBody) &#123;</span><br><span class="line">    <span class="keyword">return</span> iframeInBody;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> iframe = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;iframe&#x27;</span>);</span><br><span class="line">  iframe.<span class="title function_">setAttribute</span>(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;#iframe&#x27;</span>);</span><br><span class="line">  iframe.<span class="property">src</span> = <span class="string">&#x27;https://jakeyu.top/localstorage&#x27;</span>;</span><br><span class="line">  iframe.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">insertAdjacentElement</span>(<span class="string">&#x27;beforeend&#x27;</span>, iframe);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> iframe;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="核心-Class"><a href="#核心-Class" class="headerlink" title="核心 Class"></a>核心 Class</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">localStorage</span> &#123;</span><br><span class="line">  <span class="attr">iframe</span>: <span class="title class_">HTMLIFrameElement</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// iframe 是否加载完成</span></span><br><span class="line">  <span class="attr">isReady</span>: <span class="title class_">Boolean</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 同时调用方法时，需要在 iframe 回调之后执行 reslove</span></span><br><span class="line">  <span class="attr">waitMap</span>: <span class="title class_">Map</span>&lt;<span class="built_in">string</span>, <span class="title class_">Function</span>&gt;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 在 iframe ready之前调用方法，需要保存一下，ready后执行</span></span><br><span class="line">  <span class="attr">beforeReady</span>: [<span class="title class_">Function</span>?];</span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">listenMessage</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">isReady</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">beforeReady</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">iframe</span> = <span class="title function_">createIframe</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">waitMap</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 设置数据</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> <span class="variable">key</span></span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> <span class="variable">value</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">setItem</span>(<span class="params">key: <span class="built_in">string</span>, value: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> eventType = <span class="string">&#x27;set&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> randomKey = <span class="variable language_">this</span>.<span class="title function_">getRandomString</span>(eventType);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">waitMap</span>.<span class="title function_">set</span>(randomKey, resolve);</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">postMessage</span>(&#123;</span><br><span class="line">        eventType,</span><br><span class="line">        key,</span><br><span class="line">        value,</span><br><span class="line">        randomKey</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 监听消息</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">listenMessage</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 接收 iframe 消息</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;message&#x27;</span>, <span class="variable language_">this</span>.<span class="property">receiveMessage</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>), <span class="literal">false</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 处理接收消息</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> <span class="variable">event</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">receiveMessage</span>(<span class="params">event: MessageEvent</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; data = &#123;&#125; &#125; = event;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> data === <span class="string">&#x27;string&#x27;</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> &#123; eventType, randomKey, value &#125; = data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (eventType === <span class="string">&#x27;return&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> handler = <span class="variable language_">this</span>.<span class="property">waitMap</span>.<span class="title function_">get</span>(randomKey);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (handler) &#123;</span><br><span class="line">        <span class="title function_">handler</span>(value);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">waitMap</span>.<span class="title function_">delete</span>(randomKey);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (eventType === <span class="string">&#x27;ready&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">isReady</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">while</span> (<span class="variable language_">this</span>.<span class="property">beforeReady</span>.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> fun = <span class="variable language_">this</span>.<span class="property">beforeReady</span>.<span class="title function_">shift</span>() <span class="keyword">as</span> <span class="title class_">Function</span>;</span><br><span class="line">        <span class="title function_">fun</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取随机字符串</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> <span class="variable">eventKey</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">getRandomString</span>(<span class="params">eventKey: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> randomString = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">let</span> eventKeyRandom = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">      randomString = <span class="title function_">makeRandomString</span>(<span class="number">5</span>);</span><br><span class="line">      eventKeyRandom = <span class="string">`<span class="subst">$&#123;eventKey&#125;</span>_<span class="subst">$&#123;randomString&#125;</span>`</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="variable language_">this</span>.<span class="property">waitMap</span>.<span class="title function_">has</span>(eventKeyRandom));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> eventKeyRandom;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 向iframe中发送消息</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> <span class="variable">params</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">postMessage</span>(<span class="params">params: Record&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isReady</span>) &#123;</span><br><span class="line">      (<span class="variable language_">this</span>.<span class="property">iframe</span>.<span class="property">contentWindow</span> <span class="keyword">as</span> <span class="title class_">Window</span>).<span class="title function_">postMessage</span>(params, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">beforeReady</span>.<span class="title function_">push</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        (<span class="variable language_">this</span>.<span class="property">iframe</span>.<span class="property">contentWindow</span> <span class="keyword">as</span> <span class="title class_">Window</span>).<span class="title function_">postMessage</span>(params, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="iframe-页面"><a href="#iframe-页面" class="headerlink" title="iframe 页面"></a>iframe 页面</h2><p>iframe 页面只需要通过 postMessage 和父级页面进行通信，所以并不需要 ui。</p><h3 id="ready"><a href="#ready" class="headerlink" title="ready"></a>ready</h3><p>页面加载完成时，需要通知父页面，并执行 before 栈中的函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">parent</span>.<span class="title function_">postMessage</span>(</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">eventType</span>: <span class="string">&#x27;ready&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;*&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="监听消息"><a href="#监听消息" class="headerlink" title="监听消息"></a>监听消息</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">receiveMessage</span>(<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="comment">// 用来标记当前事件是 读/取 或者其他</span></span><br><span class="line">  <span class="keyword">const</span> eventType = <span class="title function_">get</span>(event, <span class="string">&#x27;data.eventType&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  <span class="comment">// 数据 key</span></span><br><span class="line">  <span class="keyword">const</span> key = <span class="title function_">get</span>(event, <span class="string">&#x27;data.key&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  <span class="comment">// 数据</span></span><br><span class="line">  <span class="keyword">const</span> value = <span class="title function_">get</span>(event, <span class="string">&#x27;data.value&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  <span class="comment">// 当前事件标识，用于父级页面区分当前消息来自哪次调用</span></span><br><span class="line">  <span class="keyword">const</span> randomKey = <span class="title function_">get</span>(event, <span class="string">&#x27;data.randomKey&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 只以存数据为例</span></span><br><span class="line">  <span class="keyword">if</span>(eventType === <span class="string">&#x27;set&#x27;</span>) &#123;</span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(key, value);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通知父级页面存储成功</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">parent</span>.<span class="title function_">postMessage</span>(</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">eventType</span>: <span class="string">&#x27;return&#x27;</span>,</span><br><span class="line">        value,</span><br><span class="line">        randomKey,</span><br><span class="line">        error,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&#x27;*&#x27;</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;message&#x27;</span>, receiveMessage, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>在 <code>a.jekeyu.top</code> 中存储数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title function_">localStorage</span>().<span class="title function_">setItem</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;jake&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在 <code>b.jekeyu.top</code> 中存储数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> name = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title function_">localStorage</span>().<span class="title function_">getItem</span>(<span class="string">&#x27;name&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img data-src=&quot;//blogimg.jakeyu.top/%E8%B7%A8%E5%9F%9F%E5%90%8D%E8%AF%BB%E5%8F%96localStorage/de1cd54ffb.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="前端" scheme="https://i.jakeyu.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JS" scheme="https://i.jakeyu.top/tags/JS/"/>
    
  </entry>
  
</feed>
